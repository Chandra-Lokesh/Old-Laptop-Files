create table department
(
  departmentid int primary key not null,
  departmentname varchar(50)
)

create table employees
(
  employeeid int primary key not null,
  firstname varchar(50),
  lastname varchar(50),
  departmentid int,
  salary decimal(10, 2),
  dateofjoining date,
  foreign key (departmentid) references department(departmentid)
)

create table projects
(
  projectid int primary key not null,
  projectname varchar(100),
  departmentid int,
  foreign key (departmentid) references department(departmentid)
)

create table employeeprojects
(
  employeeid int,
  projectid int,
  assigneddate date,
  foreign key (employeeid) references employees(employeeid),
  foreign key (projectid) references projects(projectid)
)

INSERT INTO department (departmentid, departmentname)
VALUES 
(1, 'Human Resources'),
(2, 'Sales'),
(3, 'IT');

INSERT INTO employees (employeeid, firstname, lastname, departmentid, salary, dateofjoining)
VALUES 
(1, 'John', 'Doe', 1, 60000.00, '2018-05-21'),
(2, 'Jane', 'Smith', 2, 75000.00, '2019-08-15'),
(3, 'Mike', 'Brown', 1, 55000.00, '2020-01-10'),
(4, 'Lisa', 'White', 3, 90000.00, '2021-02-18'),
(5, 'Mark', 'Johnson', 2, 68000.00, '2017-11-09'),
(6, 'James', 'Doe', 3, 34000.00, '2022-12-19');

INSERT INTO projects (projectid, projectname, departmentid)
VALUES 
(1, 'Project Alpha', 1),
(2, 'Project Beta', 2),
(3, 'Project Gamma', 3),
(4, 'Project Delta', 1);

INSERT INTO employeeprojects (employeeid, projectid, assigneddate)
VALUES 
(1, 1, '2018-06-01'),
(2, 2, '2019-09-01'),
(3, 4, '2020-02-10'),
(4, 3, '2021-03-01'),
(5, 2, '2017-12-01'),
(1, 4, '2019-05-01');

select * from employees;
select * from department;
select * from projects;
select * from employeeprojects;

-- Practice Questions:

-- Retrieve all employee details along with their respective department names.
-- select * from employees e join department d on e.departmentid = d.departmentid;

-- Find the employees who joined after January 1st, 2020.
-- select * from employees where dateofjoining > '2020-01-01';

-- List the total number of employees in each department.
-- select departmentid,count(*) from employees group by departmentid;

-- Retrieve the highest salary in each department.
-- select departmentid,max(salary) from employees group by departmentid;

-- Get the list of employees who are not assigned to any project.
-- select * from employees where employeeid in (select distinct(employeeid) from employeeprojects)

-- Retrieve the project name and the number of employees assigned to each project.
-- with projectcount as 
-- (select projectid, count(*) as peoplecount from employeeprojects group by projectid)
-- select p.projectname, pc.peoplecount from projectcount as pc join projects as p on pc.projectid= p.projectid;

-- Update the salary of employees by 10% for those who have been with the company for more than 5 years.
-- update employees set salary = salary * 1.1 where datediff(year, dateofjoining, getdate()) > 5;
-- select * from employees;

-- Delete all records of employees who belong to a department that no longer exists.
-- delete from employees where departmentid not in (select distinct(departmentid) from department)

-- Get a list of employees working on more than one project.
-- with employeeprojectscount as
-- (select employeeid, count(*) as projectcount from employeeprojects group by employeeid)
-- select * from employees e join employeeprojectscount epc on e.employeeid=epc.employeeid where epc.projectcount > 1

-- Retrieve the details of employees who work in the "Sales" department and are assigned to the project named "Project Beta."
-- select e.employeeid,p.projectname from employees as e 
-- join department as d on e.departmentid=d.departmentid 
-- join projects as p on e.departmentid=p.departmentid 
-- join employeeprojects as ep on e.employeeid=ep.employeeid 
-- where d.departmentname='Sales' and p.projectname='Project Beta';


-- with cte1 as 
-- (select e.employeeid, e.firstname, e.lastname, e.departmentid from employees e join department d on e.departmentid = d.departmentid where departmentname = 'Sales'),
-- cte2 as 
-- (select ep.employeeid from employeeprojects ep join projects p on ep.projectid= p.projectid where p.projectname = 'Project Beta')
-- select * from cte1 where employeeid in (select employeeid from cte2);

-- Find the department with the maximum number of employees.
-- with cte1 as 
-- (select departmentid, count(*) as employeecount from employees group by departmentid)
-- select * from cte1 where employeecount = (select max(employeecount) from cte1)

-- Retrieve the name of the employee who has been with the company the longest.
-- select top 1 * from employees order by dateofjoining asc;

-- List the employees who earn more than the average salary in their department.
-- with cte1 as 
-- (select departmentid, avg(salary) as average from employees group by departmentid)
-- select * from employees e join cte1 on e.departmentid = cte1.departmentid where e.salary > average

-- Get the total salary cost for each department.
-- select departmentid, sum(salary) from employees group by departmentid;

-- Retrieve all projects that have no employees assigned to them.



